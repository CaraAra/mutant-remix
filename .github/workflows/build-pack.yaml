name: Build and release Mutant Remix

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build-mutant-remix:
    runs-on: ubuntu-latest

    steps:
      # Checkout build files
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # Install build dependencies
      - name: Install node
        uses: actions/setup-node@v3

      - name: Install python
        uses: actions/setup-python@v3
        with:
          cache: 'pip'

      - name: Install python dependencies
        run: |
          pip install -r orxporter/requirements.txt
          pip install -r forc/requirements.txt

      - name: Install apt dependencies
        uses: Eeems-Org/apt-cache-action@v1
        with:
          packages: libimage-exiftool-perl webp libpng-dev libaom-dev

      - name: Install oxipng
        uses: baptiste0928/cargo-install@v2
        with:
          crate: oxipng

      - name: Install svgcleaner
        uses: baptiste0928/cargo-install@v2
        with:
          crate: svgcleaner

      - name: Install resvg
        uses: baptiste0928/cargo-install@v2
        with:
          crate: resvg

      # Build pack
      - name: Restore build cache
        id: cache-mutantremix-restore
        uses: actions/cache/restore@v3
        with:
          path: cache
          key: mutantremix-${{ github.sha }}

      - name: Run build script
        run: ./out_final_full.sh

      - name: Save build cache
        uses: actions/cache/save@v3
        with:
          path: cache
          key: ${{ steps.cache-mutantremix-restore.outputs.cache-primary-key }}

      # Upload build artifacts
      - name: Upload pack artifact
        uses: actions/upload-artifact@v3
        with:
          name: final-pkg
          path: |
            out/final-pkg/mtnt_*.tar.gz
            out/final-pkg/mtnt_*.json

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: out/coverage/coverage.*

  publish-coverage:
    needs: build-mutant-remix
    runs-on: ubuntu-latest

    # Only run this job on push, not on PR or manual trigger
    if: github.event_name == 'push'

    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: out/coverage

      - name: Authenticate with the repository
        uses: actions/checkout@v2
        with:
          repository: mutant-remix/coverage-report
          token: ${{ secrets.REPO_TOKEN }}
          path: coverage-report

      - name: Initialise coverage-report repository
        run: |
          git config --global user.name "[CI] Mutant Remix"
          git config --global user.email "noreply@mutant.revolt.chat"
          git init
          git remote add origin https://github.com/mutant-remix/coverage-report

      - name: Copy coverage report
        run: |
          cp -r out/coverage coverage-report
          cd coverage-report
          git add .
          git commit -m "[CI] Upload latest coverage"
          git push -f origin master

